<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.alibaba</groupId>
	<artifactId>transmittable-thread-local</artifactId>
	<version>3.x-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>TransmittableThreadLocal(TTL)</name>
	<description>
		ðŸ“Œ The missing Javaâ„¢ std lib(simple &amp; 0-dependency) for framework/middleware,
		provide an enhanced InheritableThreadLocal that transmits values between threads even using thread pooling components.
	</description>
	<url>https://github.com/alibaba/transmittable-thread-local</url>
	<inceptionYear>2013</inceptionYear>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:alibaba/transmittable-thread-local.git</connection>
		<developerConnection>scm:git:git@github.com:alibaba/transmittable-thread-local.git</developerConnection>
		<url>https://github.com/alibaba/transmittable-thread-local</url>
	</scm>
	<issueManagement>
		<url>https://github.com/alibaba/transmittable-thread-local/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>
	<ciManagement>
		<system>AppVeyor</system>
		<url>https://ci.appveyor.com/project/oldratlee/transmittable-thread-local</url>
	</ciManagement>
	<organization>
		<name>Alibaba</name>
		<url>https://www.alibaba.com</url>
	</organization>
	<developers>
		<developer>
			<name>Jerry Lee</name>
			<id>oldratlee</id>
			<email>oldratlee(AT)gmail(DOT)com</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+8</timezone>
			<url>https://github.com/oldratlee</url>
			<organization>Alibaba</organization>
			<organizationUrl>https://www.alibaba.com</organizationUrl>
		</developer>
		<developer>
			<name>Yang Fang</name>
			<id>driventokill</id>
			<email>snoop(DOT)fy(AT)gmail(DOT)com</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+8</timezone>
			<url>https://github.com/driventokill</url>
			<organization>Alibaba</organization>
			<organizationUrl>https://www.alibaba.com</organizationUrl>
		</developer>
		<developer>
			<name>wuwen</name>
			<id>wuwen5</id>
			<email>wuwen.55(AT)aliyun(DOT)com</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+8</timezone>
			<url>https://github.com/wuwen5</url>
			<organization>ofpay</organization>
			<organizationUrl>https://www.ofpay.com</organizationUrl>
		</developer>
		<developer>
			<name>David Dai</name>
			<id>LNAmp</id>
			<email>351450944(AT)qq(DOT)com</email>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+8</timezone>
			<url>https://github.com/LNAmp</url>
			<organization>Alibaba</organization>
			<organizationUrl>https://www.alibaba.com</organizationUrl>
		</developer>
	</developers>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<spotbugs.annotations.version>4.7.0</spotbugs.annotations.version>

		<kotlin.version>1.7.0</kotlin.version>
		<kotlin.compiler.jvmTarget>${maven.compiler.source}</kotlin.compiler.jvmTarget>
		<kotlin.coroutine.version>1.6.2</kotlin.coroutine.version>

		<slf4j.version>1.7.36</slf4j.version>

		<!-- testing dependencies versions -->
		<junit5.version>5.8.2</junit5.version>
		<kotest.version>5.3.2</kotest.version>

		<!--
			slf4j simple logger configuration for test

			the system properties are supported to configure the behavior of slf4j simple logger
			https://www.slf4j.org/api/org/slf4j/simple/SimpleLogger.html
		-->
		<ttl.test.logger.level>warn</ttl.test.logger.level> <!-- overridden in maven -D options -->
		<argLine.slf4j.simple.logger.default.d.options>-Dorg.slf4j.simpleLogger.logFile=System.err -Dorg.slf4j.simpleLogger.defaultLogLevel=${ttl.test.logger.level}</argLine.slf4j.simple.logger.default.d.options>
		<argLine.slf4j.simple.logger.extra.d.options/> <!-- overridden in maven -D options -->
		<argLine.slf4j.simple.logger.d.options>${argLine.slf4j.simple.logger.default.d.options} ${argLine.slf4j.simple.logger.extra.d.options}</argLine.slf4j.simple.logger.d.options>

		<argLine>${argLine.slf4j.simple.logger.d.options}</argLine> <!-- updated in profile -->
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.29.0-GA</version>
			<optional>true</optional>
		</dependency>

		<!--
			QA libs
			make qa libs optional, 0-dependency and smaller deployment
		-->
		<dependency>
			<!--
				JSR305 is already Dormant status, so SpotBugs does not release jsr305 jar file.
				Please continue using findbugsâ€™ one.
				depend on spotbugs-annotations instead.
				https://spotbugs.readthedocs.io/en/stable/migration.html
			-->
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
			<version>${spotbugs.annotations.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>3.0.2</version>
			<optional>true</optional>
		</dependency>

		<!-- Testing frameworks and related dependencies -->
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-core</artifactId>
			<version>${kotlin.coroutine.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.reactivex.rxjava2</groupId>
			<artifactId>rxjava</artifactId>
			<version>2.2.21</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.reactivex.rxjava2</groupId>
			<artifactId>rxkotlin</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
			<scope>test</scope>
		</dependency>

		<!-- logging libs -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.github.microutils</groupId>
			<artifactId>kotlin-logging-jvm</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- testing libs -->
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-runner-junit4-jvm</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-runner-junit5-jvm</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-assertions-core-jvm</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-property-jvm</artifactId>
			<scope>test</scope>
		</dependency>
		<!--
			Executing JUnit 4 and JUnit 5 tests in a same build
				https://stackoverflow.com/a/47158584/922688
		-->
		<dependency>
			<!--JUnit Jupiter Engine to depend on the JUnit5 engine and JUnit 5 API -->
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!--JUnit Jupiter Engine to depend on the JUnit4 engine and JUnit 4 API  -->
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- bom -->
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-bom</artifactId>
				<version>${kotlin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit5.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- logging libs -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.github.microutils</groupId>
				<artifactId>kotlin-logging-jvm</artifactId>
				<version>2.1.23</version>
				<scope>test</scope>
			</dependency>

			<!--
				testing libs
			-->
			<!-- https://github.com/kotlintest/kotlintest -->
			<dependency>
				<groupId>io.kotest</groupId>
				<artifactId>kotest-runner-junit4-jvm</artifactId>
				<version>${kotest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.kotest</groupId>
				<artifactId>kotest-runner-junit5-jvm</artifactId>
				<version>${kotest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.kotest</groupId>
				<artifactId>kotest-assertions-core-jvm</artifactId>
				<version>${kotest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.kotest</groupId>
				<artifactId>kotest-property-jvm</artifactId>
				<version>${kotest.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<plugins>
			<!--
				Compiling Kotlin and Java sources - Using Maven - Kotlin Programming Language
				https://kotlinlang.org/docs/reference/using-maven.html#compiling-kotlin-and-java-sources

				Making sure that the kotlin plugin is above the maven-compiler-plugin in your pom.xml file!
			-->
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
				<executions>
					<!-- Replacing default-compile as it is treated specially by maven -->
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<!-- Replacing default-testCompile as it is treated specially by maven -->
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>java-compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>java-test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<archive>
						<manifestEntries>
							<!--
								Instrumentation Specification
									- https://docs.oracle.com/javase/8/docs/technotes/guides/instrumentation/index.html (this doc for java 8)
									- https://docs.oracle.com/javase/10/docs/api/java/lang/instrument/package-summary.html#package.description
								JAR Manifest - JAR File Specification
									- https://docs.oracle.com/javase/10/docs/specs/jar/jar.html#jar-manifest
							-->
							<Premain-Class>com.alibaba.ttl.threadpool.agent.TtlAgent</Premain-Class>
							<Boot-Class-Path>${project.build.finalName}.jar</Boot-Class-Path>
							<Can-Redefine-Classes>false</Can-Redefine-Classes>
							<Can-Retransform-Classes>true</Can-Retransform-Classes>
							<Can-Set-Native-Method-Prefix>false</Can-Set-Native-Method-Prefix>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>shade-when-package</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<relocations>
								<relocation>
									<pattern>javassist</pattern>
									<shadedPattern>com.alibaba.ttl.threadpool.agent.transformlet.javassist</shadedPattern>
								</relocation>
							</relocations>
							<artifactSet>
								<includes>
									<include>org.javassist:javassist</include>
								</includes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>org.javassist:javassist</artifact>
									<excludes>
										<exclude>META-INF/MANIFEST.MF</exclude>
									</excludes>
								</filter>
							</filters>
							<shadeSourcesContent>true</shadeSourcesContent>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.13</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<!--
				https://spotbugs.github.io/
				https://spotbugs.readthedocs.io/en/latest/introduction.html
				https://spotbugs.readthedocs.io/en/latest/maven.html
			-->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.7.0.0</version>
			</plugin>
			<!--
				official docs: https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html

				add maven-enforce-plugin to make sure the right jdk is used
				https://stackoverflow.com/a/18420462/922688
			-->
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.3.9</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!--
					config example: https://github.com/mojohaus/versions-maven-plugin/issues/157#issuecomment-306041074
				-->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.11.0</version>
				<configuration>
					<rulesUri>file://${project.basedir}/src/versions-rules.xml</rulesUri>
					<generateBackupPoms>false</generateBackupPoms>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.2.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.4.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M7</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.12.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<!--
						https://www.mojohaus.org/exec-maven-plugin/
						https://www.mojohaus.org/exec-maven-plugin/exec-mojo.html
					-->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>3.0.0</version>
					<configuration>
						<executable>${java.home}/bin/java</executable>
						<classpathScope>test</classpathScope>
						<arguments>
							<argument>-Xmx256m</argument>
							<argument>-Xms256m</argument>
							<argument>-ea</argument>
							<argument>-server</argument>
							<argument>-Duser.language=en</argument>
							<argument>-Duser.country=US</argument>

							<argument>-classpath</argument>
							<classpath/>

							<argument>${exec.mainClass}</argument>
						</arguments>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>config-for-jdk16+</id>
			<activation>
				<jdk>[16,)</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*$*</exclude>
								<exclude>**/JavassistTest*</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>enable-ttl-agent-for-test</id>
			<properties>
				<!-- https://maven.apache.org/plugins/maven-jar-plugin/jar-mojo.html -->
				<ttl.built.agent.jar>
					${project.build.directory}/${project.artifactId}-${project.version}.jar
				</ttl.built.agent.jar>
				<ttl.agent.args>ttl.agent.logger:STDOUT</ttl.agent.args>
				<ttl.agent.extra.args/> <!-- overridden in maven -D options -->
				<ttl.agent.extra.d.options/> <!-- overridden in maven -D options -->
				<ttl.agent.jvm.arg>-javaagent:${ttl.built.agent.jar}=${ttl.agent.args},${ttl.agent.extra.args}</ttl.agent.jvm.arg>
				<ttl.agent.jvm.args>
					-Drun-ttl-test-under-agent=true ${ttl.agent.extra.d.options} ${ttl.agent.jvm.arg}
				</ttl.agent.jvm.args>
				<exec.mainClass>com.alibaba.demo.ttl.agent.AgentDemo</exec.mainClass> <!-- overridden in maven -D options -->
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<!--
							reference: https://github.com/EMResearch/EvoMaster/blob/95163fb042101a71289c17f6e433f91fc1f868ef/pom.xml#L851
						-->
						<configuration>
							<forkCount>1</forkCount>
							<redirectTestOutputToFile>true</redirectTestOutputToFile>
							<classpathDependencyExcludes>
								<classpathDependencyExclude>org.javassist:javassist</classpathDependencyExclude>
								<classpathDependencyExclude>com.github.spotbugs:spotbugs-annotations</classpathDependencyExclude>
								<classpathDependencyExclude>com.google.code.findbugs:jsr305</classpathDependencyExclude>
							</classpathDependencyExcludes>
							<argLine>@{argLine} ${ttl.agent.jvm.args}</argLine>
						</configuration>
					</plugin>
					<plugin>
						<!--
							https://www.mojohaus.org/exec-maven-plugin/examples/example-exec-for-java-programs.html
						-->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<configuration>
							<arguments>
								<argument>-Xmx256m</argument>
								<argument>-Xms256m</argument>
								<argument>-ea</argument>
								<argument>-server</argument>
								<argument>-Duser.language=en</argument>
								<argument>-Duser.country=US</argument>

								<argument>${ttl.agent.jvm.arg}</argument>

								<argument>-classpath</argument>
								<classpath/>

								<argument>${exec.mainClass}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>gen-src</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-shade-plugin</artifactId>
						<executions>
							<execution>
								<id>shade-when-package</id>
								<configuration>
									<createSourcesJar>true</createSourcesJar>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>gen-javadoc</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadoc</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<source>8</source>
							<show>protected</show>
							<charset>UTF-8</charset>
							<encoding>UTF-8</encoding>
							<docencoding>UTF-8</docencoding>
							<!-- https://maven.apache.org/plugins/maven-javadoc-plugin/examples/exclude-package-names.html -->
							<excludePackageNames>*.internal.*</excludePackageNames>
							<sourceFileExcludes>
								<!-- exclude deprecated TtlEnhanced from javadoc -->
								<sourceFilesourceFileExclude>com/alibaba/ttl/TtlEnhanced.java</sourceFilesourceFileExclude>
							</sourceFileExcludes>
							<overview>src/api/overview.html</overview>
							<isOffline>true</isOffline>
							<offlineLinks>
								<!--
									Apache Maven Javadoc Plugin â€“ Configuring links and offlineLinks Parameters
									https://maven.apache.org/plugins/maven-javadoc-plugin/examples/links-configuration.html

									more infos about link setting:
									Links to JSR 305 in Javadoc are broken https://github.com/google/guava/issues/2479
									Fix links to javadoc.io for Maven Javadoc Plugin #2628 https://github.com/google/guava/pull/2628
									Can't link to JDK10 in Javadoc comments https://stackoverflow.com/questions/49457896

									About package-list vs.element-list
									- Can't link to JDK10 in Javadoc comments
									  https://stackoverflow.com/a/49498219/922688
									- Missing javadoc/package-list for release 5.1
									  https://github.com/gradle/gradle/issues/8183
									  https://github.com/gradle/gradle/commit/5e88351dd456a5252d21f3a7ad25bff1b62a2fd2
								-->
								<offlineLink>
									<url>https://docs.oracle.com/javase/10/docs/api/</url>
									<location>${project.basedir}/src/package-list/java/</location>
								</offlineLink>
								<offlineLink>
									<url>https://static.javadoc.io/com.github.spotbugs/spotbugs-annotations/${spotbugs.annotations.version}/</url>
									<location>${project.basedir}/src/package-list/spotbugs-annotations/</location>
								</offlineLink>
							</offlineLinks>
							<additionalJOptions>
								<!--
									Maven javadoc Search redirects to "/undefined/.." url - Stack Overflow
									https://stackoverflow.com/questions/52326318
								-->
								<additionalJOption>--no-module-directories</additionalJOption>

								<additionalJOption>-html5</additionalJOption>
								<additionalJOption>-quiet</additionalJOption>
								<additionalJOption>-J-Duser.language=en</additionalJOption>
								<additionalJOption>-J-Duser.country=US</additionalJOption>

								<!--
									How to disable Javadoc warnings in Maven Javadoc Plugin? - Stack Overflow
									https://stackoverflow.com/questions/39616344
								-->
								<additionalJOption>-Xdoclint:-missing</additionalJOption>
							</additionalJOptions>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>gen-sign</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>lint</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!--
						Spotbugs support @SuppressWarnings
						https://github.com/spotbugs/spotbugs/issues/737#issuecomment-416118033
					-->
					<plugin>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>test-compile</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>gen-git-properties</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!--
						Maven plugin which includes build-time git repository information into an POJO / *.properties).
						Make your apps tell you which version exactly they were built from! Priceless in large distributed deployments.
							https://github.com/git-commit-id/git-commit-id-maven-plugin
					-->
					<plugin>
						<groupId>io.github.git-commit-id</groupId>
						<artifactId>git-commit-id-maven-plugin</artifactId>
						<version>5.0.0</version>
						<executions>
							<execution>
								<id>get-the-git-infos</id>
								<goals>
									<goal>revision</goal>
								</goals>
							</execution>
							<execution>
								<id>validate-the-git-infos</id>
								<goals>
									<goal>validateRevision</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<validationProperties>
								<!-- verify that the current repository is not dirty -->
								<validationProperty>
									<name>validating git dirty</name>
									<value>${git.dirty}</value>
									<shouldMatchTo>false</shouldMatchTo>
								</validationProperty>
							</validationProperties>
							<generateGitPropertiesFile>true</generateGitPropertiesFile>
							<generateGitPropertiesFilename>${project.build.outputDirectory}/META-INF/scm/${project.groupId}/${project.artifactId}/git.properties</generateGitPropertiesFilename>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>gen-code-cov</id>
			<build>
				<plugins>
					<plugin>
						<!-- for codecov.io -->
						<!-- config example: https://github.com/codecov/example-java -->
						<!-- plugin docs: https://eclemma.org/jacoco/trunk/doc/ -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.8</version>
						<executions>
							<execution>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>com/alibaba/ttl/threadpool/agent/**/*.class</exclude>
										<exclude>com/alibaba/ttl/TtlTimerTask.class</exclude>
									</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>force-jdk11-when-release</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!--
						add maven-enforce-plugin to make sure the right jdk is used
						https://stackoverflow.com/a/18420462/922688
					-->
					<plugin>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-jdk-versions</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireJavaVersion>
											<version>11</version>
										</requireJavaVersion>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
